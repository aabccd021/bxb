{
  "name": "masmott",
  "version": "0.1.4",
  "license": "MIT",
  "scripts": {
    "lint": "eslint --ext .ts ."
  },
  "peerDependencies": {
    "babel-plugin-istanbul": "^6.1.1",
    "firebase-admin": "^10.0.0",
    "firebase-functions": "^3.15.7",
    "next": "^12.0.1",
    "react": "17.0.2",
    "react-dom": "^17.0.2"
  },
  "dependencies": {
    "firebase": "^9.6.0",
    "firebase-admin": "^10.0.0",
    "fp-ts": "^2.11.5",
    "io-ts": "^2.2.16",
    "js-yaml": "^4.1.0",
    "react": "17.0.2",
    "react-dom": "17.0.2",
    "spectacles-ts": "^0.0.8",
    "swr": "^1.0.1"
  },
  "devDependencies": {
    "@types/chai": "^4.2.22",
    "@types/js-yaml": "^4.0.4",
    "@types/mocha": "^9.0.0",
    "@types/react": "^17.0.32",
    "@types/react-dom": "^17.0.10",
    "@typescript-eslint/eslint-plugin": "^5.1.0",
    "@typescript-eslint/parser": "^5.1.0",
    "chai": "^4.3.4",
    "eslint": "7",
    "eslint-config-google": "^0.14.0",
    "eslint-config-prettier": "^8.3.0",
    "eslint-plugin-fp-ts": "^0.3.0",
    "eslint-plugin-functional": "^3.7.2",
    "eslint-plugin-import": "^2.22.0",
    "eslint-plugin-jest-dom": "^3.9.2",
    "eslint-plugin-only-warn": "^1.0.3",
    "eslint-plugin-prettier": "^4.0.0",
    "eslint-plugin-react": "^7.26.1",
    "eslint-plugin-react-hooks": "^4.2.0",
    "eslint-plugin-unused-imports": "^1.1.5",
    "fast-check": "^2.18.1",
    "firebase-admin": "^10.0.0",
    "firebase-functions": "^3.15.7",
    "fs-extra": "^10.0.0",
    "mocha": "^9.1.3",
    "next": "^12.0.1",
    "nyc": "^15.1.0",
    "prettier": "^2.4.1",
    "typescript": "^4.5.2"
  },
  "eslintConfig": {
    "root": true,
    "env": {
      "es6": true,
      "node": true,
      "browser": true,
      "jest": true
    },
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
      "project": [
        "**/tsconfig.json"
      ],
      "sourceType": "module",
      "ecmaVersion": 8,
      "ecmaFeatures": {
        "impliedStrict": true,
        "experimentalObjectRestSpread": true
      },
      "allowImportExportEverywhere": true
    },
    "ignorePatterns": [
      "**/*.js",
      "dist/",
      "node_modules",
      "scripts",
      "examples"
    ],
    "overrides": [
      {
        "files": [
          "**/library/*.ts"
        ],
        "rules": {
          "no-restricted-imports": "off"
        }
      }
    ],
    "plugins": [
      "@typescript-eslint",
      "functional",
      "fp-ts",
      "only-warn",
      "unused-imports",
      "import",
      "react-hooks"
    ],
    "extends": [
      "eslint:recommended",
      "plugin:@typescript-eslint/recommended",
      "plugin:functional/recommended",
      "plugin:fp-ts/recommended",
      "plugin:fp-ts/recommended-requiring-type-checking",
      "plugin:import/recommended",
      "plugin:import/typescript",
      "plugin:jest-dom/recommended",
      "plugin:prettier/recommended",
      "plugin:react/recommended",
      "prettier"
    ],
    "rules": {
      "no-unsafe-optional-chaining": "error",
      "no-else-return": "error",
      "no-useless-return": "error",
      "no-undef-init": "error",
      "no-useless-rename": "error",
      "object-shorthand": "error",
      "prefer-arrow-callback": "error",
      "prefer-destructuring": "error",
      "prefer-template": "error",
      "eqeqeq": "error",
      "no-shadow": "off",
      "no-use-before-define": [
        "error",
        {
          "variables": false
        }
      ],
      "no-restricted-imports": [
        "error",
        {
          "patterns": [
            "firebase-admin/*",
            "firebase-functions/*"
          ]
        }
      ],
      "max-len": [
        "error",
        {
          "code": 80
        }
      ],
      "prettier/prettier": [
        "error",
        {
          "singleQuote": true,
          "printWidth": 80
        }
      ],
      "functional/functional-parameters": "off",
      "@typescript-eslint/no-unused-vars": "off",
      "@typescript-eslint/no-shadow": "error",
      "import/no-cycle": "error",
      "import/no-unresolved": "off",
      "react-hooks/rules-of-hooks": "error",
      "react-hooks/exhaustive-deps": "error",
      "react/prop-types": "off",
      "unused-imports/no-unused-vars": [
        "error",
        {
          "vars": "all",
          "varsIgnorePattern": "^_",
          "args": "after-used",
          "argsIgnorePattern": "^_"
        }
      ]
    },
    "settings": {
      "react": {
        "version": "detect"
      }
    }
  }
}